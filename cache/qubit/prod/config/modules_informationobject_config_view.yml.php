<?php
// auto-generated by sfViewConfigHandler
// date: 2024/10/19 18:03:03
$response = $this->context->getResponse();

if ($this->actionName.$this->viewName == 'importSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'browseSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'listSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'physicalObjects')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'multiFileUploadSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'storageLocationsSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'multiFileUpdateSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'renameSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'updatePublicationStatusSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else if ($this->actionName.$this->viewName == 'uploadFindingAidSuccess')
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}
else
{
  $templateName = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_template', $this->actionName);
  $this->setTemplate($templateName.$this->viewName.$this->getExtension());
}

if ($templateName.$this->viewName == 'importSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/collapse', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/form', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/textarea', '', NULL);
  $response->addJavascript('/vendor/yui/connection/connection-min', '', NULL);
  $response->addJavascript('/vendor/yui/datasource/datasource-min', '', NULL);
  $response->addJavascript('/vendor/yui/container/container-min', '', NULL);
  $response->addJavascript('/vendor/yui/autocomplete/autocomplete-min', '', NULL);
  $response->addJavascript('autocomplete', '', NULL);
}
else if ($templateName.$this->viewName == 'browseSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addStylesheet('/vendor/jquery-ui/jquery-ui.min.css', '', NULL);
  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
  $response->addJavascript('/vendor/yui/connection/connection-min', '', NULL);
  $response->addJavascript('/vendor/yui/datasource/datasource-min', '', NULL);
  $response->addJavascript('/vendor/yui/autocomplete/autocomplete-min', '', NULL);
  $response->addJavascript('autocomplete', '', NULL);
}
else if ($templateName.$this->viewName == 'listSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/tableheader', '', NULL);
}
else if ($templateName.$this->viewName == 'physicalObjects')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/tableheader', '', NULL);
}
else if ($templateName.$this->viewName == 'multiFileUploadSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addStylesheet('/vendor/uppy/uppy-bundle.css', '', NULL);
  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
  $response->addJavascript('/vendor/uppy/uppy-bundle.js', '', NULL);
  $response->addJavascript('multiFileUpload', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/collapse', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/form', '', NULL);
  $response->addJavascript('description', '', NULL);
  $response->addJavascript('blank', '', NULL);
}
else if ($templateName.$this->viewName == 'storageLocationsSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addStylesheet('print-reports', 'last', array (  'media' => 'screen',));
  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
}
else if ($templateName.$this->viewName == 'multiFileUpdateSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/collapse', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/form', '', NULL);
}
else if ($templateName.$this->viewName == 'renameSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/collapse', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/form', '', NULL);
  $response->addJavascript('sidebarPaginatedList', '', NULL);
  $response->addJavascript('description', '', NULL);
  $response->addJavascript('rename', '', NULL);
}
else if ($templateName.$this->viewName == 'updatePublicationStatusSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/collapse', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/form', '', NULL);
  $response->addJavascript('sidebarPaginatedList', '', NULL);
}
else if ($templateName.$this->viewName == 'uploadFindingAidSuccess')
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/collapse', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/form', '', NULL);
  $response->addJavascript('sidebarPaginatedList', '', NULL);
}
else
{
  if (null !== $layout = sfConfig::get('symfony.view.'.$this->moduleName.'_'.$this->actionName.'_layout'))
  {
    $this->setDecoratorTemplate(false === $layout ? false : $layout.$this->getExtension());
  }
  else if (null === $this->getDecoratorTemplate() && !$this->context->getRequest()->isXmlHttpRequest())
  {
    $this->setDecoratorTemplate('' == 'layout' ? false : 'layout'.$this->getExtension());
  }
  $this->setComponentSlot('css', 'informationobject', 'stylesheet');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'css', 'informationobject', 'stylesheet'))));
  $this->setComponentSlot('header', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'header', '', ''))));
  $this->setComponentSlot('footer', '', '');
  if (sfConfig::get('sf_logging_enabled')) $this->context->getEventDispatcher()->notify(new sfEvent($this, 'application.log', array(sprintf('Set component "%s" (%s/%s)', 'footer', '', ''))));
  $response->addHttpMeta('content-type', 'text/html', false);
  $response->addHttpMeta('X-UA-Compatible', 'IE=edge,chrome=1', false);
  $response->addMeta('title', 'AtoM', false, false);
  $response->addMeta('description', 'Access to memory - Open information management toolkit', false, false);
  $response->addMeta('viewport', 'initial-scale=1.0, user-scalable=no', false, false);

  $response->addJavascript('/vendor/jquery', '', NULL);
  $response->addJavascript('/plugins/sfDrupalPlugin/vendor/drupal/misc/drupal', '', NULL);
  $response->addJavascript('/vendor/yui/yahoo-dom-event/yahoo-dom-event', '', NULL);
  $response->addJavascript('/vendor/yui/element/element-min', '', NULL);
  $response->addJavascript('/vendor/yui/button/button-min', '', NULL);
  $response->addJavascript('/vendor/modernizr', '', NULL);
  $response->addJavascript('/vendor/jquery-ui/jquery-ui.min.js', '', NULL);
  $response->addJavascript('/vendor/jquery.expander.js', '', NULL);
  $response->addJavascript('/vendor/jquery.masonry.js', '', NULL);
  $response->addJavascript('/vendor/jquery.imagesloaded.js', '', NULL);
  $response->addJavascript('/vendor/bootstrap/js/bootstrap', '', NULL);
  $response->addJavascript('/vendor/URI.js', '', NULL);
  $response->addJavascript('/vendor/meetselva/attrchange', '', NULL);
  $response->addJavascript('qubit', '', NULL);
  $response->addJavascript('treeView', '', NULL);
  $response->addJavascript('clipboard', '', NULL);
  $response->addJavascript('dominion', 'last', array ());
}

